load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_rust//rust:rust.bzl", "rust_library")
load("@//bzl/config/rust:BUILD.bzl", "RUST_CRATE_TYPE", "RUST_PROFILE_RELEASE")
load("@obazl_rules_ocaml//ocaml:rules.bzl",
     "ocaml_archive",
     "ocaml_library",
     "ocaml_ns",
     "ocaml_module")

IMPL_OPTS = ["-linkall"]

################
ocaml_library(
    name = "snarky-bn382",
    opts = [],
    deps = [
        # do not sort (buildifier)
        ":_Snarky_bn382",
        ":_Snarky_bn382_generated_stubs"
    ],
    visibility = ["//visibility:public"],
)

################
ocaml_archive(
    name = "snarky-bn382-archive",
    opts = [],
    deps = [
        # do not sort (buildifier)
        ":_Snarky_bn382",
        ":_Snarky_bn382_generated_stubs"
    ],
    visibility = ["//visibility:public"],
)

#########
ocaml_ns(
    name = "Snarky_bn382_ns",
    ns = "snarky_bn382",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "snarky_bn382.ml",
        "//snarky-bn382/bindings_gen:snarky_bn382_generated_stubs.ml",
    ]
)

#############
ocaml_module(
    name = "_Snarky_bn382",  # compare: snarky_bn382 below (underscore)
    src  = "snarky_bn382.ml",
    ns   = ":Snarky_bn382_ns",
    opts = IMPL_OPTS,
    deps = [
        # do not sort (buildifier)
        # "@opam//pkg:ctypes",
        ":_Snarky_bn382_stubs",
        # "//snarky-bn382/caml:Snarky_bn382_bindings",
        ":_Snarky_bn382_generated_stubs",
    ],
    # cc_deps = {
    #     ":snarky_bn382_stubs_stubs": "default",
    #     ":snarky_bn382_stubs": "default",
    # },
    visibility = ["//visibility:public"]
)

################################################################
ocaml_module(
    name = "_Snarky_bn382_stubs",
    src  = "snarky_bn382_stubs.ml",
    opts = IMPL_OPTS,
    cc_deps = {
        ":snarky_bn382_stubs": "default"
    },
    # cc_linkall  = [":snarky_bn382"], # -Wl,-force_load (MacOS) or -whole-archive (Linux)
    visibility = ["//visibility:public"],
)

cc_library(
    name = "snarky_bn382_stubs",      # underscore, not hyphen; outputs libsnarky_bn382.[a|so]
    srcs = [
        "//snarky-bn382/bindings_gen:snarky_bn382_generated_stubs.c",
        "snarky_bn382.h"
    ],
    copts = [
        "-std=c11",
        "-Isnarky-bn382",
        "-Iexternal/zexe/snarky-bn382",
    ],
    include_prefix = "snarky_bn382",
    deps = [
        "@ocaml//csdk/ctypes",
    ],
    visibility = ["//visibility:public"]
    # visibility = ["//snarky-bn382/bindings_gen:__pkg__"],
)

################################################################
#############
ocaml_module(
    name = "_Snarky_bn382_generated_stubs",
    src  = "//snarky-bn382/bindings_gen:snarky_bn382_generated_stubs.ml",
    ns   = ":Snarky_bn382_ns",
    opts = IMPL_OPTS,
    visibility = ["//visibility:public"],
    deps = ["//snarky-bn382/caml:Snarky_bn382_bindings"],
    cc_deps = {
        "//snarky-bn382:snarky_bn382_stubs": "default",
        "//snarky-bn382:snarky_bn382_stubs_stubs": "default"
    },
    # cc_linkall  = ["//snarky-bn382:snarky_bn382"], # -Wl,-force_load (MacOS) or -whole-archive (Linux)
)

#############
rust_library(
    visibility = ["//visibility:public"],
    name = "snarky_bn382_stubs_stubs",
    edition = "2018",
    crate_type = RUST_CRATE_TYPE,
    ## FIXME: figure out how to specify the MacOS SDK to use
    # rustc_env = {"APPLE_SDK_VERSION_OVERRIDE": "10.5"},
    rustc_flags = RUST_PROFILE_RELEASE + [
        "-C", "target-feature=+bmi2,+adx",
        # "-C", "-llink-args=-mmacosx-version-min=10.5"
    ],
    srcs = glob(["src/**/*.rs"]),
    deps = [
        ## Using @zexe prevents clash with @marlin packages.
        ## Without this (and the corresponding local_repository rule in WORKSPACE)
        ## we get duplicate copies of these packages. This is because we import @marlin,
        ## which imports @zexe, so (some of) marlin's targets depend on @zexe// labels.
        "@zexe//algebra",
        "@zexe//bench-utils",
        "@zexe//crypto-primitives",
        "@zexe//dpc",
        "@zexe//ff-fft",
        "@zexe//gm17",
        "@zexe//groth16",
        "@zexe//groupmap",
        "@zexe//r1cs-core",
        "@zexe//r1cs-std",

        "@marlin//oracle",
        "@marlin//dlog_solver",
        "@marlin//circuits/marlin:marlin_circuits",
        "@marlin//circuits/plonk:plonk_circuits",

        "@marlin//pairing/commitment:commitment_pairing",
        "@marlin//pairing/marlin:marlin_protocol_pairing",

        "@marlin//dlog/commitment:commitment_dlog",
        "@marlin//dlog/marlin:marlin_protocol_dlog",
        "@marlin//dlog/plonk:plonk_protocol_dlog",

        "//bzl/raze/cargo:libc",
        "//bzl/raze/cargo:rand",
        "//bzl/raze/cargo:rand_core",
        "//bzl/raze/cargo:num_bigint",
        "//bzl/raze/cargo:sprs",
        "//bzl/raze/cargo:rayon"
    ],
)
